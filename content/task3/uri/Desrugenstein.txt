Desrugenstein
URI Online Judge | 1111
========================
A cidade de Desrugenstein é uma bagunça completa. Olhando para o mapa ela parece organizada, já que foi criada na forma de uma grade quadrada, mas não há padrões de direções. Cada esquina diz para onde você pode ir a partir de lá (norte, sul, leste, oeste). O prefeito Daniel Cobra é cabeça-dura e preguiçoso o suficiente para deixar tudo como está e proibir qualquer tentativa de mudança. Incapaz de fazer muito, o Conselheiro Espiritual Mestre de Desrugenstein, Giordano Marfyn, te pediu, Conselheiro Espiritual Nível XVII de Desrugenstein, programador-chefe de Desrugenstein, para escrever um programa para calcular o custo de ir de uma esquina (x, y) a outra esquina (z, w), considerando as ruas bagunçadas.

Entrada:
--------
O arquivo de entrada possui vários casos de teste. A primeira linha de cada caso de teste contém um inteiro N (1 ≤ N ≤ 10) que representa altura e largura da grade quadrada que mapeia a cidade (uma grade N x N). A entrada termina quando N = 0, caso que não deve ser processado. Cada uma das próximas N linhas representa uma rua da cidade, começando da mais ao norte (N – 1) até a mais ao sul. Em cada uma destas linhas há 4*N inteiros, 4 para cada esquina: A (norte) B (sul) C (oeste) D (leste). Cada um é 0 se não é possível seguir na respectiva direção a partir daquela esquina, ou 1 se é possível.

Depois do mapa da cidade, seu programa deve ler um inteiro P (1 ≤ P ≤ 100). As próximas P linhas contém 4 inteiros cada, x0 y0 x1 y1 representando a questão: “Qual o custo mínimo de ir da esquina (x0 , y0) até a esquina (x1 , y1)?”. O custo de ir de uma esquina para a esquina mais próxima em qualquer direção é 1.

Saída:
--------
Para cada questão, responda “Impossible”, se não existe um caminho válido entre as esquinas (respeitando as regras de direções para esquinas), ou o custo mínimo, se há caminho(s). Imprima uma linha em branco após cada caso de teste.

Notas:
--------
N = Altura e Largura da quadra (1 <= N <= 10);
A entrada termina com N = 0;

Segue-se N linhas (cada linha é uma rua);
Cada linha com  N*4 números (4 números para cada esquina, representando as direções Norte, Sul, Oeste, Leste);

P = Número de Questões  (1 <= P <= 100);
As próximas P linhas contém 4 inteiros cada;

4
(N, S, O, L)

3=  0 1 0 1  0 0 1 0  0 0 0 1  0 1 0 0

2=  0 0 0 0  1 0 0 1  0 0 0 1  0 1 0 0

1=  1 0 0 0  1 0 1 0  1 1 0 0  0 1 1 0

0=  0 0 0 0  0 0 1 0  0 0 1 0  0 0 0 0
      =0=      =1=      =2=      =3=


5
1 3 0 3
2 3 3 0
2 3 0 0
3 1 3 2
0 3 0 0
0